version: '3.8'

services:
  web:
    user: "1000:1000"
    image: helpdesk:latest
    restart: always
    command: daphne -b 0.0.0.0 -p 8000 ticsys.asgi:application --access-log=logs/daphne.access.log
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 127.0.0.1:8000:8000
    env_file:
      - ./.env

  beat:
    image: helpdesk:latest
    restart: always
    user: "1000:1000"
    command: celery -A ticsys beat -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      - RABBIT_HOST=rabbitmq
    depends_on:
      - rabbitmq

  worker:
    image: helpdesk:latest
    restart: always
    user: "1000:1000"
    command: celery -A ticsys worker -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      - RABBIT_HOST=rabbitmq
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./confs/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBIT_VHOST}

  redis:
    image: redis:latest
    restart: always

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: "1000:1000"
    volumes:
        - ./pgbackups:/backups
    links:
        - postgres
    depends_on:
        - postgres
    env_file:
      - ./.env

  microservice:
    image: ghcr.io/ginosunset/delivery-parser:latest
    command: app

volumes:
  rabbitmq:
  postgres_data:
