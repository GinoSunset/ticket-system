version: '3.8'

services:
  web:
    build: ./app
    restart: always
    command: daphne -b 0.0.0.0 -p 8000 ticsys.asgi:application --access-log=logs/daphne.access.log
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 127.0.0.1:8001:8000
    env_file:
      - ./.dev.env
    environment:
      - RABBIT_HOST=rabbitmq
      - EMAIL_PORT=1025
      - EMAIL_HOST=mailhog
      - EMAIL_USE_SSL=off
      - REDIS_HOST=redis

  beat:
    build: ./app
    command: celery -A ticsys beat -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.dev.env
    environment:
      - RABBIT_HOST=rabbitmq
      - EMAIL_PORT=1025
      - EMAIL_HOST=mailhog
      - EMAIL_USE_SSL=off
      - REDIS_HOST=redis
    depends_on:
      - rabbitmq

  worker:
    build: ./app
    command: celery -A ticsys worker -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.dev.env
    environment:
      - RABBIT_HOST=rabbitmq
      - EMAIL_PORT=1025
      - EMAIL_HOST=mailhog
      - EMAIL_USE_SSL=off
      - REDIS_HOST=redis

    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBIT_VHOST}

  redis:
    image: redis:latest

  flower:
    image: mher/flower
    command: ["celery", "--broker=amqp://$RABBIT_LOGIN:$RABBIT_PASSWORD@rabbitmq:5672/$RABBIT_VHOST", "flower"]
    ports:
       - 5552:5555
    env_file:
      - .dev.env
    depends_on:
      - rabbitmq

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025
      - 1025:1025

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres
    volumes:
        - ./pgbackups:/backups
    links:
        - postgres
    depends_on:
        - postgres
    env_file:
      - ./.env

  microservice:
    image: dellivery-parser_web
    ports:
      - "8081:8000"
    command: ["python", "app.py"]
    env_file:
      - ./.env

  

volumes:
  rabbitmq:
  postgres_data:
